@page "/ProduktySklep"
@using Tartak.WebApp.Client.Model
@using Tartak.WebApp.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavManager
@inject User user

<h3>Shop</h3>
<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Price</th>
            <th>Quantity</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in _products ?? new ProductModel[0])
        {
            <tr>
                <td>@product.Name</td>
                <td>@product.Description</td>
                <td>@($"{product.Price} zł")</td>
                <td>@product.Quantity</td>
                <td>
                    @if(user.IsManager)
                    {
                        <button type="button" class="btn btn-warning" style="margin:10;" onclick="@(() => NavManager.NavigateTo($"/ProduktySklep/Edit/{product.Id}"))">Edit</button>
                    }
                    <button type="button" class="btn btn-primary" style="margin:10;" onclick="@(() => BuyProduct(product))">Buy</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    ProductModel[]? _products;

    [Parameter]
    public int ID { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            user.UserStatusChanged += async (object? sender, EventArgs args) => await InvokeAsync(() =>
                                                                                {
                                                                                    StateHasChanged();
                                                                                });
            _products = await Http.GetFromJsonAsync<ProductModel[]>("api/SklepProduct");
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }
    }
    protected async Task BuyProduct(ProductModel product)
    {
        try
        {

        }
        catch (Exception ex)
        {
            throw;
        }
    }
}